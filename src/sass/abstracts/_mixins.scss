@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin liste{
  list-style: none;
  padding: 0;
  margin: 0;
  a{
      text-decoration: none;
      color: inherit;
  }
}
@mixin header{
  display: flex;
          font-size: 12px;
          gap: 10px;
          border:1px solid #e2e2e2;
          width: fit-content;
          padding: 5px;
          box-shadow: 0 0 5px #e2e2e2;
          border-radius: 12px;
          margin-bottom: 14px;
          font-weight: 500;
}
@mixin flex {
  display: flex;
  align-items: center;
}
@mixin flexCenter {
  @include flex;
  justify-content: center;
}
@mixin flexBetween {
  @include flex;
  justify-content: space-between;
}
@mixin textEllipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin responsive($breakpoint) {
  @if $breakpoint == 'mobile' {
    @media (max-width: 767px) { @content; }
  } @else if $breakpoint == 'tablet' {
    @media (min-width: 768px) and (max-width: 1023px) { @content; }
  } @else if $breakpoint == 'desktop' {
    @media (min-width: 1024px) { @content; }
  }
}
@mixin wrapperButton{
  button{
    @include button;
    font-size: 12px;
    padding: 10px 20px;
    border-radius: 12px;
    font-family: "Inter";
    transition: all 0.3s ease;
    &:first-child{
        border: 1px solid #e2e2e2;
        background-color: transparent;
    &:hover{
        background-color: black;
        color: white;
    }
    }
    &:last-child{
        background-color: black;
        color: white;
        border: 1px solid black;
        &:hover{
            background-color: white;
            color: black;
            border: 1px solid #e2e2e2;
        }
    }

}
}

@mixin visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
@mixin aspectRatio($width, $height) {
  position: relative;
  width: 100%;
  padding-top: ($height / $width) * 100%;

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
@mixin boxShadow($x, $y, $blur, $spread, $color) {
  box-shadow: $x $y $blur $spread $color;
}

@mixin gradient($startColor, $endColor) {
  background: linear-gradient(to right, $startColor, $endColor);
}
@mixin transition($property, $duration, $timing-function: ease, $delay: 0s) {
  transition: $property $duration $timing-function $delay;
}




@mixin absolute{
  content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
}
@mixin button{
  border: none;
  outline: none;
  cursor: pointer;
}


// MEDIA QUERY MANAGER
/*
    0-600px = phone

    600-900px = tablet portrait
    
    900-1200px = tablet landscape
    
    1200-1800px = desktop
    [1200-1800] is where our normal Styles Apply
    1800+ = big desktop

*/
@mixin respond-phone {
  @media (max-width: 600px) {
    @content;
  }
}
/*
$breakpoint argyement choices:
- phone
- tab-port
- tab-land
- big-desktop
- 1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      @content; // 37.5 em = 600px
    }
  }
  @if $breakpoint == tab-port {
    @media (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    @media (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      @content;
    }
  }
  @if $breakpoint == desktop {
    @media (min-width: 1200px) and (max-width: 1800px) {
      @content;
    }
  }
}